[package]
name = "web-nuts-rs"
version = "0.1.0"
authors = ["Sebastien Soudan <sebastien.soudan@gmail.com>"]
edition = "2018"
license = "MIT OR Apache-2.0"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
plotters = "^0.3.2"
wasm-bindgen = "0.2.88"
nuts-rs = "*"
# nuts-rs = { path = "./nuts-rs", default-features = false, features = ["wasm"] }
# getrandom = { version = "0.2.10", features = ["js"] }
web-sys = { version = "0.3.65", features = ["HtmlTextAreaElement"] }
# "HtmlCanvasElement",
# "HtmlButtonElement",
# "Headers",
# "Request",
# "RequestInit",
# "RequestMode",
# "Response",
# ] }
plotters-canvas = "^0.3.0"
# wasm-bindgen-futures = "0.4.18"
rand = "*"
chrono = "*"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.38"
rand = { version = "0.8.5", default_features = false, features = [
    "getrandom",
    "alloc",
] }
rand_chacha = "*"
rand_distr = "*"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
lto = true
